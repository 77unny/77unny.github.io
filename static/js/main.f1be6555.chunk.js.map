{"version":3,"sources":["styles/typed-components.ts","styles/theme.ts","styles/GlobalStyle.ts","Routes/Home/index.ts","Routes/Home/HomePresenter.tsx","Routes/Intro/styles.ts","Routes/Intro/IntroPresenter.tsx","Routes/Intro/index.ts","Routes/Intro/IntroContainer.tsx","Components/App/AppPresenter.tsx","Components/App/AppContainer.tsx","Components/App/index.ts","index.tsx"],"names":["styledComponents","styled","default","ThemeProvider","css","keyframes","theme","greenColor","blueColor","pinkColor","GlobalStyle","createGlobalStyle","reset","HomePresenter","Container","div","Contents","Form","form","InputBox","Input","input","Button","button","props","GreetingMsg","p","IntroPresenter","onSubmit","onChange","name","placeholder","autoFocus","IntroContainer","useState","setName","e","preventDefault","console","log","target","value","HomeRouters","path","exact","component","Home","from","to","IntroRouters","Intro","AppPresenter","isInput","basename","process","AppContainer","ReactDOM","render","App","document","getElementById"],"mappings":"0LAYIA,EAJOC,E,EAATC,QAGAC,G,EAFAC,I,EACAC,U,EACAF,eAIaF,ICTAK,EAND,CACZC,WAAY,UACZC,UAAW,UACXC,UAAW,W,6gBCAb,IAwBeC,EAxBKC,4BAAH,IACbC,K,eCHWC,ECCO,WACpB,OAAO,sC,khCCDF,IAAMC,EAAYb,EAAOc,IAAV,KAQTC,EAAWf,EAAOc,IAAV,KAIRE,EAAOhB,EAAOiB,KAAV,KACJC,EAAWlB,EAAOc,IAAV,KAURK,EAAQnB,EAAOoB,MAAV,KAOLC,EAASrB,EAAOsB,OAAV,KAER,SAAAC,GAAK,OAAIA,EAAMlB,MAAME,aAKnBiB,EAAcxB,EAAOyB,EAAV,KCZTC,EAnB2B,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACrD,OACE,kBAACf,EAAD,KACE,kBAACE,EAAD,KACE,kBAACS,EAAD,uCAEE,mIAEF,kBAACR,EAAD,CAAMW,SAAUA,GACd,kBAACT,EAAD,KACE,kBAACC,EAAD,CAAOU,KAAK,OAAOC,YAAY,kEAAgBC,WAAS,EAACH,SAAUA,KAErE,kBAACP,EAAD,uCCnBKW,ECEQ,WAAO,IAAD,EACHC,mBAAS,sBADN,mBACpBJ,EADoB,KACdK,EADc,KAU3B,OAAO,kBAAC,EAAD,CAAgBP,SAPN,SAACQ,GAChBA,EAAEC,iBACFC,QAAQC,IAAIT,IAK6BD,SAF1B,SAACO,GAAD,OAAkDD,EAAQC,EAAEI,OAAOC,WCIhFC,EAAc,WAClB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,UAAWC,IACnC,kBAAC,IAAD,CAAUC,KAAM,IAAKC,GAAI,QAIzBC,EAAe,WACnB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAON,KAAM,IAAKC,OAAK,EAACC,UAAWK,IACnC,kBAAC,IAAD,CAAUH,KAAM,IAAKC,GAAI,QAKhBG,EAvByB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACzC,OACE,kBAAC,IAAD,CAAeC,SAAUC,IAAyBF,EAAU,kBAAC,EAAD,MAAkB,kBAAC,EAAD,QCPlFd,QAAQC,IAAIe,IACZ,ICJeC,EDIM,kBAAM,kBAAC,EAAD,CAAcH,SAFzB,KEIhBI,IAASC,OACP,kBAACtD,EAAD,CAAeG,MAAOA,GACpB,kBAAC,EAAD,MACA,kBAACoD,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f1be6555.chunk.js","sourcesContent":["import * as styledComponents from 'styled-components';\n\ninterface IThemeInterface {\n  greenColor: string;\n  blueColor: string;\n  pinkColor: string;\n}\nconst {\n  default: styled,\n  css,\n  keyframes,\n  ThemeProvider,\n} = styledComponents as styledComponents.ThemedStyledComponentsModule<IThemeInterface>;\n\nexport { css, keyframes, ThemeProvider };\nexport default styled;\n","const theme = {\n  greenColor: '#1ccd8c',\n  blueColor: '#3598f1',\n  pinkColor: '#ff90ab',\n};\n\nexport default theme;\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  * {\n    box-sizing: border-box\n  }\n  html,body,#root {height: 100%}\n  body {\n    font-family: Sunflower, --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    color: #fff;\n    background: #121212;\n  }\n  a {\n    color: #333;\n    text-decoration: none;\n  }\n  input,\n  button {\n    &:focus,\n    &:active {\n      outline: none;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","import HomePresenter from './HomePresenter';\nexport default HomePresenter;\n","import React from 'react';\n\nconst HomePresenter = () => {\n  return <div>HOME</div>;\n};\n\nexport default HomePresenter;\n","import styled from '../../styles/typed-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  font-size: 78px;\n`;\nexport const Contents = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Form = styled.form``;\nexport const InputBox = styled.div`\n  display: flex;\n  align-items: center;\n  &::before {\n    content: '{';\n  }\n  &::after {\n    content: '}';\n  }\n`;\nexport const Input = styled.input`\n  padding: 0 20px;\n  font-size: 78px;\n  color: #fff;\n  border: 0;\n  background: transparent;\n`;\nexport const Button = styled.button`\n  font-size: 48px;\n  color: ${props => props.theme.blueColor};\n  border: 0;\n  cursor: pointer;\n  background: transparent;\n`;\nexport const GreetingMsg = styled.p`\n  line-height: 1.3;\n  span {\n    display: block;\n  }\n`;\n","import React from 'react';\nimport { Container, Input, Form, Contents, GreetingMsg, Button, InputBox } from './styles';\n\ninterface IProps {\n  onSubmit?: ((event: React.FormEvent<HTMLFormElement>) => void) | undefined;\n  onChange?: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined;\n}\n\nconst IntroPresenter: React.SFC<IProps> = ({ onSubmit, onChange }) => {\n  return (\n    <Container>\n      <Contents>\n        <GreetingMsg>\n          반갑습니다.\n          <span>백주은 | BaekCo 포트폴리오 페이지입니다.</span>\n        </GreetingMsg>\n        <Form onSubmit={onSubmit}>\n          <InputBox>\n            <Input name=\"name\" placeholder=\"회사/이름을 입력하세요.\" autoFocus onChange={onChange} />\n          </InputBox>\n          <Button>&gt; 입력하기</Button>\n        </Form>\n      </Contents>\n    </Container>\n  );\n};\n\nexport default IntroPresenter;\n","import IntroContainer from './IntroContainer';\nexport default IntroContainer;\n","import React, { useState } from 'react';\nimport IntroPresenter from './IntroPresenter';\n\nconst IntroContainer = () => {\n  const [name, setName] = useState('게스트');\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    console.log(name);\n  };\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>): void => setName(e.target.value);\n\n  return <IntroPresenter onSubmit={onSubmit} onChange={onChange} />;\n};\n\nexport default IntroContainer;\n","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Home from '../../Routes/Home';\nimport Intro from '../../Routes/Intro';\n\ninterface IProps {\n  isInput: boolean;\n}\n\nconst AppPresenter: React.SFC<IProps> = ({ isInput }) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>{isInput ? <HomeRouters /> : <IntroRouters />}</BrowserRouter>\n  );\n};\n\nconst HomeRouters = () => {\n  return (\n    <Switch>\n      <Route path={'/'} exact component={Home} />\n      <Redirect from={'*'} to={'/'} />\n    </Switch>\n  );\n};\nconst IntroRouters = () => {\n  return (\n    <Switch>\n      <Route path={'/'} exact component={Intro} />\n      <Redirect from={'*'} to={'/'} />\n    </Switch>\n  );\n};\n\nexport default AppPresenter;\n","import React from 'react';\nimport AppPresenter from './AppPresenter';\n\nconst isInput = false;\nconsole.log(process.env.PUBLIC_URL);\nconst AppContainer = () => <AppPresenter isInput={isInput} />;\n\nexport default AppContainer;\n","import AppContainer from './AppContainer';\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from './styles/typed-components';\nimport theme from './styles/theme';\nimport GlobalStyle from './styles/GlobalStyle';\nimport App from './Components/App';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <GlobalStyle />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}