{"version":3,"sources":["styles/GlobalStyle.ts","styles/theme.ts","Routes/Home/index.tsx","Routes/Home/HomePresenter.tsx","styles/typed-components.ts","Routes/Intro/styles.ts","Routes/Intro/index.ts","Routes/Intro/IntroPresenter.tsx","Components/App/AppPresenter.tsx","Components/App/index.ts","Components/App/AppContainer.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","reset","theme","greenColor","blueColor","pinkColor","HomePresenter","styledComponetns","styled","default","css","keyframes","ThemeProvider","Container","div","Contents","Form","form","InputBox","Input","input","Button","button","props","GreetingMsg","p","IntroPresenter","placeholder","autoFocus","AppPresenter","isInput","path","exact","component","Home","Intro","AppContainer","ReactDOM","render","App","document","getElementById"],"mappings":"ysBAGA,IA0BeA,EA1BKC,4BAAH,IAEbC,KCCWC,EAND,CACZC,WAAY,UACZC,UAAW,UACXC,UAAW,W,eCFEC,ECCO,WACpB,OAAO,sC,ECULC,EAJOC,E,EAATC,QAOaD,G,EANbE,I,EACAC,U,EACAC,cAIaJ,G,0gCCdR,IAAMK,EAAYL,EAAOM,IAAV,KAQTC,EAAWP,EAAOM,IAAV,KAIRE,EAAOR,EAAOS,KAAV,KACJC,EAAWV,EAAOM,IAAV,KAURK,EAAQX,EAAOY,MAAV,KAOLC,EAASb,EAAOc,OAAV,KAER,SAAAC,GAAK,OAAIA,EAAMrB,MAAME,aAKnBoB,EAAchB,EAAOiB,EAAV,KCtCTC,ECEQ,WACrB,OACE,kBAACb,EAAD,KACE,kBAACE,EAAD,KACE,kBAACS,EAAD,uCAEE,iHAEF,kBAACR,EAAD,KACE,kBAACE,EAAD,KACE,kBAACC,EAAD,CAAOQ,YAAY,kEAAgBC,WAAS,KAE9C,kBAACP,EAAD,uCCsBKQ,EA5ByB,SAAC,GAAgB,EAAdC,QACzC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,SAASE,UAAWE,OCbzBC,ECIM,kBAAM,kBAAC,EAAD,CAAcN,SAFzB,KCIhBO,IAASC,OACP,kBAAC,gBAAD,CAAepC,MAAOA,GACpB,kBAAC,EAAD,MACA,kBAACqC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9573037b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst GlobalStyle = createGlobalStyle`\n\n  ${reset}\n\n  * {\n    box-sizing: border-box\n  }\n  html,body,#root {height: 100%}\n  body {\n    font-family: Sunflower, --apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    color: #fff;\n    background: #121212;\n  }\n  a {\n    color: #333;\n    text-decoration: none;\n  }\n  input,\n  button {\n    &:focus,\n    &:active {\n      outline: none;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","const theme = {\n  greenColor: '#1ccd8c',\n  blueColor: '#3598f1',\n  pinkColor: '#ff90ab',\n};\n\nexport default theme;\n","import HomePresenter from './HomePresenter';\nexport default HomePresenter;\n","import React from 'react';\n\nconst HomePresenter = () => {\n  return <div>HOME</div>;\n};\n\nexport default HomePresenter;\n","import * as styledComponetns from 'styled-components';\n\ninterface IThemeInterface {\n  greenColor: string;\n  blueColor: string;\n  pinkColor: string;\n}\n\nconst {\n  default: styled,\n  css,\n  keyframes,\n  ThemeProvider,\n} = styledComponetns as styledComponetns.ThemedStyledComponentsModule<IThemeInterface>;\n\nexport { css, keyframes, ThemeProvider };\nexport default styled;\n","import styled from '../../styles/typed-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  font-size: 78px;\n`;\nexport const Contents = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Form = styled.form``;\nexport const InputBox = styled.div`\n  display: flex;\n  align-items: center;\n  &::before {\n    content: '{';\n  }\n  &::after {\n    content: '}';\n  }\n`;\nexport const Input = styled.input`\n  padding: 0 20px;\n  font-size: 78px;\n  color: #fff;\n  border: 0;\n  background: transparent;\n`;\nexport const Button = styled.button`\n  font-size: 48px;\n  color: ${props => props.theme.blueColor};\n  border: 0;\n  cursor: pointer;\n  background: transparent;\n`;\nexport const GreetingMsg = styled.p`\n  line-height: 1.3;\n  span {\n    display: block;\n  }\n`;\n","import IntroPresenter from './IntroPresenter';\nexport default IntroPresenter;\n","import React from 'react';\nimport { Container, Input, Form, Contents, GreetingMsg, Button, InputBox } from './styles';\n\nconst IntroPresenter = () => {\n  return (\n    <Container>\n      <Contents>\n        <GreetingMsg>\n          반갑습니다.\n          <span>백주은 | BaekCo 소개 페이지입니다.</span>\n        </GreetingMsg>\n        <Form>\n          <InputBox>\n            <Input placeholder=\"회사/이름을 입력하세요.\" autoFocus />\n          </InputBox>\n          <Button>&gt; 입력하기</Button>\n        </Form>\n      </Contents>\n    </Container>\n  );\n};\n\nexport default IntroPresenter;\n","import React from 'react';\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Home from '../../Routes/Home';\nimport Intro from '../../Routes/Intro';\n\ninterface IProps {\n  isInput: boolean;\n}\n\nconst AppPresenter: React.SFC<IProps> = ({ isInput }) => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/intro\" component={Intro} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nconst HomeRouters = () => {\n  return (\n    <Switch>\n      <Route path={'/'} exact component={Home} />\n      {/* <Redirect from={'*'} to={'/'} /> */}\n    </Switch>\n  );\n};\nconst IntroRouters = () => {\n  return (\n    <Switch>\n      <Route path={'/'} exact component={Intro} />\n      {/* <Redirect from={'*'} to={'/'} /> */}\n    </Switch>\n  );\n};\n\nexport default AppPresenter;\n","import AppContainer from './AppContainer';\nexport default AppContainer;\n","import React from 'react';\nimport AppPresenter from './AppPresenter';\n\nconst isInput = true;\n\nconst AppContainer = () => <AppPresenter isInput={isInput} />;\n\nexport default AppContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from './styles/GlobalStyle';\nimport theme from './styles/theme';\nimport App from './Components/App';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <GlobalStyle />\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}