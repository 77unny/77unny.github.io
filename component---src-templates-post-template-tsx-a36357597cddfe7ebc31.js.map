{"version":3,"file":"component---src-templates-post-template-tsx-a36357597cddfe7ebc31.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/posts/body/style.ts","webpack://gatsby-starter-default/./src/components/posts/body/index.tsx","webpack://gatsby-starter-default/./src/components/posts/comment/index.tsx","webpack://gatsby-starter-default/./src/constants/index.ts","webpack://gatsby-starter-default/./src/components/posts/head/style.ts","webpack://gatsby-starter-default/./src/components/posts/head/index.tsx","webpack://gatsby-starter-default/./src/templates/postTemplate.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const MarkdownRenderer = styled.div`\n  ${tw`flex flex-col w-full p-5 sm:p-10 leading-6 break-all bg-white`}\n\n  p {\n    ${tw`py-2`}\n  }\n\n  h1,\n  h2,\n  h3 {\n    ${tw`mb-5 font-bold`}\n  }\n\n  * + h1,\n  * + h2,\n  * + h3 {\n    ${tw`mt-10`}\n  }\n\n  hr + h1,\n  hr + h2,\n  hr + h3 {\n    ${tw`mt-0`}\n  }\n\n  h1 {\n    ${tw`text-2xl sm:text-3xl lg:text-4xl`}\n  }\n\n  h2 {\n    ${tw`text-xl sm:text-2xl lg:text-3xl`};\n  }\n\n  h3 {\n    ${tw`text-lg sm:text-xl lg:text-2xl`}\n  }\n\n  h4,\n  h5 {\n    ${tw`text-base sm:text-lg font-semibold`}\n  }\n\n  // Adjust Quotation Element Style\n  blockquote {\n    ${tw`my-5 py-1 px-4 rounded font-light text-xs text-gray-400 bg-gray-50`}\n    border-left: 2px solid #ccc;\n    p {\n      ${tw`font-light text-sm text-gray-400`}\n    }\n  }\n\n  // Adjust List Element Style\n  ol,\n  ul {\n    ${tw`ml-5 py-2 list-outside`}\n  }\n  \n  ol {\n    ${tw`list-decimal`}\n  }\n  \n  ul {\n    ${tw`list-disc`}\n  }\n  \n  .contains-task-list {\n    ${tw`list-none list-inside`}\n  }\n\n  // Adjust Horizontal Rule style\n  hr {\n    ${tw`my-10 border border-gray-300 `}\n  }\n\n  // Adjust Link Element Style\n  a {\n    ${tw`text-blue-400 underline`}\n  }\n\n  // Adjust Code Style\n  pre[class*='language-'] {\n    ${tw`my-5 p-4`}\n\n    ::-webkit-scrollbar-thumb {\n      ${tw`rounded-lg`}\n      background: rgba(255, 255, 255, 0.5);\n    }\n  }\n\n  code[class*='language-'],\n  pre[class*='language-'] {\n    tab-size: 2;\n  }\n`;\n","import React from 'react';\n\nimport { MarkdownRenderer } from './style';\n\nexport default function PostBody({ html }: { html: string }) {\n  return <MarkdownRenderer dangerouslySetInnerHTML={{ __html: html }} />;\n}\n","import React, { createRef, useEffect } from 'react';\n\nimport { UtterancesAttributesType } from './types';\nimport { GITHUB_REPOSITORY, UTTERANCES_SRC } from '../../../constants';\n\nexport default function Comment() {\n  const element = createRef<HTMLDivElement>();\n\n  useEffect(() => {\n    if (element.current === null) return;\n\n    const utterances: HTMLScriptElement = document.createElement('script');\n\n    const attributes: UtterancesAttributesType = {\n      src: process.env.UTTERANC_SRC as string || UTTERANCES_SRC,\n      repo: process.env.GITHUB_REPOSITORY as string || GITHUB_REPOSITORY,\n      'issue-term': 'title',\n      label: 'Comment',\n      theme: `github-light`,\n      crossorigin: 'anonymous',\n      async: 'true',\n    };\n\n    Object.entries(attributes).forEach(([key, value]) => {\n      utterances.setAttribute(key, value);\n    });\n\n    element.current.appendChild(utterances);\n  }, []);\n\n  return <div ref={element} />;\n}\n","export const UTTERANCES_SRC = 'https://utteranc.es/client.js';\nexport const GITHUB_REPOSITORY = 'baekCode/baekCode.github.io';","import { GatsbyImage } from 'gatsby-plugin-image';\nimport styled from 'styled-components';\nimport tw from 'twin.macro';\n\nexport const Container = styled.div`\n  ${tw`relative w-full h-48 sm:h-64 lg:h-80`}\n`;\n\nexport const Background = styled(GatsbyImage)`\n  ${tw`absolute top-0 left-0 z-0 w-full h-48 sm:h-64 lg:h-80 object-cover filter blur-lg`}\n  filter:  grayscale(50%);\n\n  &::after {\n    content: '';\n    ${tw`absolute top-0 left-0 w-full h-full`}\n    background: linear-gradient(\n      180deg,\n      rgba(0, 0, 0, 0.4) 0%,\n      rgba(255, 255, 255, 0.3) 50%,\n      rgba(0, 0, 0, 0.4) 100%\n    );\n  }\n`;\n\nexport const Inner = styled.div`\n  ${tw`relative z-10 flex flex-col items-start w-full h-full p-5 sm:p-10 text-white`}\n  text-shadow : 2px 2px 2px rgba(0, 0, 0, 0.4);\n`;\nexport const GoBackButton = styled.button`\n  ${tw`bg-transparent text-white text-xl cursor-pointer border-0`}\n`;\n\nexport const Title = styled.div`\n  ${tw`overflow-hidden mt-auto pb-2 overflow-ellipsis whitespace-normal break-words line-clamp-2 font-bold text-2xl sm:text-3xl lg:text-5xl`}\n  -webkit-box-orient: vertical;\n`;\n\nexport const PostData = styled.div`\n  ${tw`flex justify-between items-center w-full mt-2 font-bold text-xs sm:text-base`}\n`;\n","import { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nimport { Background, Container, GoBackButton, Inner, PostData, Title } from './style';\nimport { IPostHead } from './types';\n\nexport default function PostHead({ thumbnail, title, date, categories }: IPostHead) {\n  const onClickGoBack = () => window.history.back();\n\n  return (\n    <Container>\n      <Background image={thumbnail} alt={`${title} background image`} />\n      <Inner>\n        <GoBackButton onClick={onClickGoBack}>\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </GoBackButton>\n        <Title children={title} />\n        <PostData>\n          <div>{categories.map(item => `#${item}`).join(' ')}</div>\n          <div>{date}</div>\n        </PostData>\n      </Inner>\n    </Container>\n  );\n}\n","import { graphql } from 'gatsby';\nimport React from 'react';\n\nimport Layout from '../components/layout';\nimport PostBody from '../components/posts/body';\nimport Comment from '../components/posts/comment';\nimport PostHead from '../components/posts/head';\nimport { TPost } from '../pages';\n\ninterface IPostTemplate {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        headingTitle: string;\n        author: string;\n        avatarImg: string;\n        githubUrl: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: {\n        node: {\n          html: string;\n          frontmatter: TPost;\n        };\n      }[];\n    };\n  };\n  location: {\n    href: string;\n  };\n}\n\nexport default function PostTemplate({\n  data: {\n    site: {\n      siteMetadata: { title: siteTitle, headingTitle, author, avatarImg, githubUrl },\n    },\n    allMarkdownRemark: { edges },\n  },\n  location: { href },\n}: IPostTemplate) {\n  const {\n    node: {\n      html,\n      frontmatter: {\n        title,\n        date,\n        summary,\n        categories,\n        thumbnail: {\n          childImageSharp: { gatsbyImageData },\n          publicURL,\n        },\n      },\n    },\n  } = edges[0];\n  return (\n    <Layout\n      title={siteTitle}\n      headingTitle={headingTitle}\n      description={summary}\n      url={href}\n      image={publicURL}\n      logo={avatarImg}\n      footerLink={githubUrl}\n      author={author}\n    >\n      <PostHead thumbnail={gatsbyImageData} title={title} date={date} categories={categories} />\n      <PostBody html={html} />\n      <Comment />\n    </Layout>\n  );\n}\n\nexport const queryMarkdownDataBySlug = graphql`\n  query queryMarkdownDataBySlug($slug: String) {\n    site {\n      siteMetadata {\n        title\n        headingTitle\n        author\n        avatarImg\n        githubUrl\n      }\n    }\n    allMarkdownRemark(filter: { fields: { slug: { eq: $slug } } }) {\n      edges {\n        node {\n          html\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData\n              }\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["MarkdownRenderer","styled","PostBody","html","dangerouslySetInnerHTML","__html","Comment","element","createRef","useEffect","current","utterances","document","createElement","attributes","src","process","UTTERANC_SRC","repo","GITHUB_REPOSITORY","label","theme","crossorigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","ref","Container","Background","GatsbyImage","Inner","GoBackButton","Title","PostData","PostHead","thumbnail","title","date","categories","image","alt","onClick","window","history","back","icon","faArrowLeft","children","map","item","join","PostTemplate","data","site","siteMetadata","siteTitle","headingTitle","author","avatarImg","githubUrl","edges","allMarkdownRemark","href","location","node","frontmatter","summary","gatsbyImageData","childImageSharp","publicURL","description","url","logo","footerLink"],"sourceRoot":""}